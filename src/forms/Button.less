@import '../../stylesheets/_constants.less';
@import '../../stylesheets/_mixins.less';

.button {
  .antialiasedText;
  user-select: none;
  background-color: @button-bg;
  color: @button-color;
  font-size: @large-font-size;
  font-family: @heading-font;
  font-weight: bold;
  line-height: 0;
  text-align: center;
  min-width: @input-min-width;
  height: @input-height;
  padding: 0 @small-spacing;
  outline: none;
  border: @border-solid @button-color;
  border-radius: @border-radius;
  text-transform: capitalize;
  transition: @transition-color-bg;

  + .button {
    margin-left: @small-spacing;
  }

  &:hover {
    background-color: @button-hover-bg;
    color: @button-hover-color;
  }

  &:disabled {
    .disabled;
  }
}

a.button {
  line-height: 2em;
  display: inline-block;
  text-decoration: none;
}

.secondaryButton {
  border-color: @button-secondary-color;
  color: @button-secondary-color;

  &:hover {
    background-color: @button-secondary-hover-bg;
    color: @button-hover-color;
  }
}

.filledButton {
  border-color: @button-color;
  background-color: @button-color;
  color: @white;

  &:hover {
    border-color: @button-color;
    background-color: @button-color;
    color: @white;
  }
}

.cancelButton {
  border: transparent;
  min-width: 0;
  width: @input-min-width / 2;
  color: @grey-alpha;

  &:hover {
    background-color: transparent;
    color: @black;
  }
}

.dangerButton {
  border-color: @button-danger-color;
  color: @button-danger-color;

  &:hover {
    background-color: @button-danger-hover-bg;
    color: @button-danger-hover-color;
  }
}

.iconButton {
  color: @dark-grey;
  min-width: 0;
  height: @small-font-size;
  padding: 0;
  border: transparent;
  margin-left: @small-spacing;
  vertical-align: baseline;

  &:hover {
    background-color: transparent;
    color: @black;
  }
}

.submitting,
.submitting:hover,
.disabled,
.disabled:hover {
  background-color: @button-disabled-bg;
  border-color: @button-disabled-bg;
  color: @button-disabled-color;
  cursor: default;
}

// rowButton is a helper to set a button in a row after a wrapping paragraph
// to be used with button or composed
.rowButton {
  float: right;
  margin-left: 1em;
}

// alignRightButton: Apply to a Button that is inlined (e.g. with a PageHeader).
// This will align the button on the right side of the "row" if .rowButton doesn't help. 
.alignRightButton {
  margin-left: auto;
}

// Apply to a button to make it line up with an input field
.inputButton {
  .button;
  height: 2.25rem; // Identical to what bass.css defines for input fields
  line-height: inherit;
  padding: @small-spacing @small-spacing; // Taken from .input class
}